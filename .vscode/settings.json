{
  "i18n-ally.localesPaths": [
    "frontend/src/i18n"
  ],
  "i18n-ally.sourceLanguage": "ja",
  "i18n-ally.keystyle": "nested",
  "i18n-ally.extract.autoDetect": true,
  "i18n-ally.extract.ignored": [
    " {\n          showChart(\"ip\");\n        }}\n      >\n        ",
    "TWSNMP Logo",
    "\n      TWSNMP FK - {mapName}\n    ",
    " {\n        page = \"map\";\n      }}\n    >\n      ",
    " {\n        page = \"node\";\n      }}\n    >\n      ",
    " {\n        page = \"polling\";\n      }}\n    >\n      ",
    " {\n        page = \"eventlog\";\n      }}\n    >\n      ",
    " {\n        page = \"syslog\";\n      }}\n    >\n      ",
    " {\n        page = \"trap\";\n      }}\n    >\n      ",
    " {\n        page = \"arp\";\n      }}\n    >\n      ",
    " {\n        page = \"ai\";\n      }}\n    >\n      ",
    " {\n        showConfig = true;\n      }}\n    >\n      ",
    "Level",
    "Time",
    "Type",
    "Event",
    "Name",
    "Mode",
    "Descr",
    "<span class=\"mdi ",
    " text-xl\" style=\"color:",
    ";\"></span><span class=\"ml-2\">",
    "Score",
    "Node",
    "Polling",
    "Count",
    "<span class=\"text-yellow-500\">${ip}</span>",
    "<span class=\"text-red-500\">${ip}</span>",
    "<span class=\"text-red-600\">${mac}</span>",
    "<span class=\"text-red-600\">${mac}</span>",
    "Vendor",
    "State",
    "Change",
    "Change",
    " {\n        showReport = true;\n      }}\n      size=\"xs\"\n    >\n      ",
    "\n      Excel\n    ",
    " {\n          showChart(\"ip3D\");\n        }}\n      >\n        ",
    " {\n          showChart(\"graphForce\");\n        }}\n      >\n        ",
    " {\n          showChart(\"graphCircular\");\n        }}\n      >\n        ",
    "SNMP Community",
    "snmp user",
    "Syslog",
    "SNMP TRAP",
    "ARP Watch",
    "smtp user",
    "\n    {#if drawItem.Type ",
    "< 2}\n      ",
    " {\n          selectedNode = \"\";\n          showEditNode = true;\n          showMapMenu = false;\n        }}\n      >\n        ",
    " {\n          selectedDrawItem = \"\";\n          showEditDrawItem = true;\n          showMapMenu = false;\n        }}\n      >\n        ",
    " {\n          showMapMenu = false;\n          CheckPolling(\"\");\n        }}\n      >\n        ",
    " {\n          showMapMenu = false;\n          showDiscover = true;\n        }}\n      >\n        ",
    " {\n          showMapMenu = false;\n          showGrid = true;\n        }}\n      >\n        ",
    " {\n          resetMap();\n          count = 1;\n          showMapMenu = false;\n        }}\n      >\n        ",
    " {\n          showNodeMenu = false;\n          showNodeReport = true;\n        }}\n      >\n        ",
    " {\n          showNodeMenu = false;\n          showPing = true;\n        }}\n      >\n        ",
    " {\n          showNodeMenu = false;\n          showMibBr = true;\n        }}\n      >\n        ",
    " {\n          showNodeMenu = false;\n          WakeOnLan(selectedNode);\n        }}\n      >\n        ",
    " {\n          showNodeMenu = false;\n          showEditNode = true;\n        }}\n      >\n        ",
    " {\n          showNodeMenu = false;\n          showPolling = true;\n        }}\n      >\n        ",
    " {\n          showNodeMenu = false;\n          CheckPolling(selectedNode);\n        }}\n      >\n        ",
    " {\n          showNodeMenu = false;\n          await CopyNode(selectedNode);\n          count = 1;\n        }}\n      >\n        ",
    " {\n          deleteNodes([selectedNode]);\n        }}\n      >\n        ",
    " {\n              showNodeMenu = false;\n              BrowserOpenURL(url);\n            }}\n          >\n            ",
    " {\n          showDrawItemMenu = false;\n          showEditDrawItem = true;\n        }}\n      >\n        ",
    " {\n          showDrawItemMenu = false;\n          await CopyDrawItem(selectedDrawItem);\n          count = 1;\n        }}\n      >\n        ",
    " {\n          showDrawItemMenu = false;\n          await CopyDrawItem(selectedDrawItem);\n          count = 1;\n        }}\n      >\n        ",
    " {\n          showGrid = false;\n          grid(gridSize, false);\n        }}\n        size=\"sm\"\n      >\n        ",
    " {\n          showGrid = false;\n          grid(gridSize, true);\n        }}\n        size=\"sm\"\n      >\n        ",
    " {\n          showGrid = false;\n        }}\n        size=\"sm\"\n      >\n        ",
    " {\n    showMapMenu = false;\n    showNodeMenu = false;\n    showDrawItemMenu = false;\n  }}\n/>\n",
    "\n        Wake On Lan\n      ",
    " {\n          deleteDrawItems([selectedDrawItem]);\n        }}\n      >\n        ",
    "Index",
    "Value",
    "Table",
    "Table",
    "TWSNMP MIB(",
    ")",
    " {\n          showMIBTree = true;\n        }}\n      >\n        ",
    " {\n          name = selected;\n        }}\n      />\n    ",
    " {\n              exportMIB(\"csv\");\n            }}\n            size=\"sm\"\n          >\n            ",
    " {\n              exportMIB(\"excel\");\n            }}\n            size=\"sm\"\n          >\n            ",
    "\n            Excel\n          ",
    " {\n        name = e.detail;\n        showMIBTree = false;\n      }}\n    />\n    ",
    " {\n          showMIBTree = false;\n        }}\n        size=\"sm\"\n      >\n        ",
    "Speed",
    "Running",
    "Runnable",
    "Testing",
    "Invalid",
    "Down",
    "<span class=\"text-blue-700\">",
    "<span class=\"text-blue-900\">",
    "<span class=\"text-red-800\">",
    "<span class=\"text-blue-700\">${r.toFixed(2)}</span>",
    "<span class=\"text-yellow-700\">${r.toFixed(2)}</span>",
    "<span class=\"text-red-700\">${r.toFixed(2)}</span>",
    "Yes",
    "No",
    "Read Only",
    "Key",
    "Size",
    "Used",
    "Rate",
    "Unit",
    "Status",
    "Errors",
    "Mount",
    "Remote",
    "Access",
    "Bootable",
    "Path",
    "Param",
    "Mem",
    "%",
    "(",
    "Bytes",
    "I/F Status",
    "Traffic",
    "SNMP restart",
    "System date",
    "diff < 1",
    "Process count",
    "CPU Usage",
    "avg < 95.0",
    "\n      s = hrStorageSize;\n      u = hrStorageUsed;\n      rate = s ? (100.0*u)/s : 0.0;\n      setResult(\"rate\",rate);\n      rate < 95.0\n    ",
    " proccess count",
    " process count",
    " {\n          showHrSystem();\n        }}\n      >\n        ",
    "\n            File System\n          ",
    "\n      {/if}\n      {#if selectedHrSystemCount > 0 ",
    "& canWacthHrSystem()}\n        ",
    "Usage",
    "&",
    "&",
    "Timeout",
    "Stat",
    "Loc",
    "\n      {#if !wait ",
    "& results.length > 0}\n        {#if canShowHistogram}\n          ",
    "& results.length > 0}\n        {#if canShowHistogram}\n          ",
    "Params",
    "Filter",
    "Result",
    "=",
    "\n        {#if polling.LogMode == 3 ",
    "& aiResult}\n          ",
    "Host",
    "Tag",
    "Message",
    "count < 1",
    "Variables",
    " {\n          showFilter= false;\n          refresh();\n        }}\n        size=\"xs\"\n      >\n        ",
    " {\n          showFilter = false;\n        }}\n        size=\"xs\"\n      >\n        ",
    " (showFilter = true)}\n      size=\"xs\"\n    >\n      ",
    " {\n          showFilter = false;\n          refresh();\n        }}\n        size=\"xs\"\n      >\n        ",
    "\n        TWSNMP FK\n      ",
    " {\n      showReport = true;\n    }}\n      size=\"xs\"\n      >\n      ",
    " {\n          showGrid = false;\n          grid(gridSize, false);\n        }}\n        size=\"xs\"\n      >\n        ",
    " {\n          showGrid = false;\n          grid(gridSize, true);\n        }}\n        size=\"xs\"\n      >\n        ",
    " {\n          showGrid = false;\n        }}\n        size=\"xs\"\n      >\n        ",
    "\n          Wake On Lan\n        ",
    "Wake On Lan",
    " {\n        page = \"system\";\n      }}\n    >\n      ",
    "\n      System\n    ",
    " {\n          showChart(\"from\");\n        }}\n      >\n        ",
    " {\n          showChart(\"heatmap\");\n        }}\n      >\n        ",
    " {\n          showChart(\"trap3D\");\n        }}\n      >\n        ",
    " {\n          showChart(\"type\");\n        }}\n      >\n        ",
    "Disk",
    "Load",
    "Net",
    "Conn",
    "Proc",
    "DBSize",
    " {\n    showForecast = false;\n  }}\n  size=\"xs\"\n>\n  ",
    " {\n        showForecast = false;\n      }}\n      size=\"xs\"\n    >\n      "
  ]
}